# âœ… Sursele CocoaPods
source 'https://cdn.cocoapods.org/'
source 'https://github.com/expo/expo.git'

# âœ… Definim versiunea minimÄƒ de iOS
platform :ios, '13.0'

# âœ… ÃŽncarcÄƒ scripturile React Native
require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

# âœ… PregÄƒtim proiectul React Native
prepare_react_native_project!

# âœ… Configurare Flipper (opÈ›ional)
flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled

# âœ… Configurare Frameworks (static/dynamic)
linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
  
end

# âœ… Targetul principal al aplicaÈ›iei
target 'RockGymIasi' do
  config = use_native_modules!

  # âœ… Definim variabila flags
  flags = get_default_flags()

  # âœ… AdÄƒugÄƒm explicit ExpoModulesCore
  pod 'ExpoModulesCore', :path => '../node_modules/expo-modules-core'

  # âœ… Configurare React Native
  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => flags[:hermes_enabled],  # Hermes este dezactivat implicit
    :fabric_enabled => flags[:fabric_enabled],  # Fabric este dezactivat implicit
    :flipper_configuration => flipper_config,
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # âœ… Target pentru teste
  target 'RockGymIasiTests' do
    inherit! :complete
  end

  # âœ… ConfiguraÈ›ii suplimentare dupÄƒ instalare
  post_install do |installer|
    react_native_post_install(
      installer,
      :mac_catalyst_enabled => false
    )
    __apply_Xcode_12_5_M1_post_install_workaround(installer)

    # ðŸ”§ Fix pentru arhitectura ARM pe Mac M1
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
      end
    end
  end
end
